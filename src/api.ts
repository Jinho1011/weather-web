import axios from "axios";
import Key from "./key";
import { Coords } from "./interfaces/interface";

export const getCoords = () => {
  return new Promise<Coords>((resolve, reject) => {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        let coordinates = {
          lat: position.coords.latitude,
          lng: position.coords.longitude,
        };
        resolve(coordinates);
      },
      (error) => reject(error)
    );
  });
};

export const getWeather = (lat: number, lng: number) => {
  const req = axios
    .get(
      `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&lang=kr&units=metric&appid=${Key}`
    )
    .then((res) => res.data);
  return req;
};

export const getOneCall = (lat: number, lng: number) => {
  const req = axios
    .get(
      `http://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&exclude=current,minutely&lang=kr&units=metric&appid=${Key}`
    )
    .then((res) => res.data);
  return req;
};

export const getCurrentColor = (): string => {
  const data = [
    "02041b",
    "03041c",
    "04041d",
    "05051e",
    "06041e",
    "07051f",
    "08051f",
    "080420",
    "090420",
    "0a0421",
    "0a0421",
    "0c0522",
    "0d0523",
    "0e0524",
    "0e0524",
    "0f0525",
    "100425",
    "110526",
    "110527",
    "120527",
    "130528",
    "140529",
    "150529",
    "16052a",
    "17052b",
    "17052b",
    "19062c",
    "19052c",
    "1a062d",
    "1b062e",
    "1c062f",
    "1d062f",
    "1e052f",
    "1f0630",
    "1f0531",
    "200631",
    "210632",
    "220633",
    "230634",
    "240634",
    "250635",
    "260635",
    "260636",
    "270636",
    "280637",
    "290638",
    "2a0639",
    "2b0639",
    "2c063a",
    "2d073a",
    "2d063b",
    "2f073c",
    "2f073c",
    "30073d",
    "31073e",
    "32073e",
    "33063f",
    "33073f",
    "340640",
    "350741",
    "370742",
    "370742",
    "380743",
    "390743",
    "390743",
    "3a0744",
    "3b0745",
    "3d0946",
    "44124c",
    "4b1b51",
    "522456",
    "582b5b",
    "5f3561",
    "663d65",
    "6d466b",
    "734f70",
    "7a5875",
    "81617a",
    "886980",
    "8f7184",
    "967a89",
    "9c828e",
    "a5898e",
    "ac8d8d",
    "b4948e",
    "bc998c",
    "c39f8d",
    "cba58d",
    "d3ab8d",
    "dab08c",
    "e2b68c",
    "e9bb8c",
    "eebf8d",
    "e8be91",
    "e4be95",
    "e0be99",
    "dbbd9e",
    "d7bda2",
    "d2bca6",
    "cdbcab",
    "c8baad",
    "c4bab1",
    "beb9b6",
    "bbb9ba",
    "b6b9bf",
    "b2b8c3",
    "adb8c7",
    "a9b8cb",
    "a3b6cf",
    "9eb6d3",
    "9ab6d7",
    "97b5da",
    "96b5da",
    "94b5db",
    "93b4dc",
    "91b4dd",
    "8fb3dd",
    "8fb4df",
    "8cb3df",
    "8ab3e0",
    "89b2e0",
    "88b3e2",
    "86b2e2",
    "85b2e3",
    "83b1e4",
    "81b1e4",
    "80b2e6",
    "7eb1e7",
    "7cb1e7",
    "7bb0e8",
    "79b0e9",
    "78b0ea",
    "76b0eb",
    "74afec",
    "73b0ed",
    "71afee",
    "70afee",
    "6fafef",
    "6daef0",
    "6baef0",
    "6aaef1",
    "69adf1",
    "67adf2",
    "65adf4",
    "63acf5",
    "63adf6",
    "61acf6",
    "5facf8",
    "5eabf7",
    "5dabf8",
    "5baaf9",
    "59abfa",
    "57abfb",
    "56aafc",
    "54aafd",
    "53aafe",
    "52a9fe",
    "50a9ff",
    "51aafe",
    "53aafd",
    "54aafb",
    "56aafa",
    "58aaf9",
    "5aabf8",
    "5caaf6",
    "5eacf5",
    "5fabf4",
    "61acf2",
    "63abf0",
    "65acf0",
    "67acee",
    "69aded",
    "6baceb",
    "6cadea",
    "6faee9",
    "70aee7",
    "72aee6",
    "74aee4",
    "76aee3",
    "77afe2",
    "7aafe1",
    "7bafdf",
    "7db0df",
    "80b0dd",
    "82b0dc",
    "83b1da",
    "84b1d9",
    "86b1d7",
    "89b1d6",
    "8ab1d4",
    "8cb1d3",
    "8eb2d2",
    "91b2d0",
    "93b3d0",
    "94b3ce",
    "97b3cd",
    "97b2cb",
    "99b3ca",
    "9bb3c8",
    "9eb4c7",
    "9fb4c6",
    "a1b5c5",
    "a3b5c3",
    "a5b5c3",
    "a7b5c0",
    "a8b5bf",
    "aab6be",
    "acb6bd",
    "aeb6bb",
    "b0b7ba",
    "b2b7b9",
    "b4b7b7",
    "b5b7b6",
    "b8b8b5",
    "b9b8b4",
    "bbb8b2",
    "bcb8b0",
    "bfb9b0",
    "c0b8ae",
    "c3b9ad",
    "c4b9aa",
    "c5b9a9",
    "c8baa9",
    "cabaa7",
    "ccbaa6",
    "cdbaa4",
    "d0bba3",
    "d1bba2",
    "d3bba0",
    "d5bc9f",
    "d7bc9e",
    "d9bc9d",
    "dbbd9c",
    "ddbd9a",
    "debd99",
    "e0bd97",
    "e2bd96",
    "e3bd94",
    "e5bd93",
    "e8be92",
    "eabe90",
    "ebbf8f",
    "edbf8d",
    "efbf8c",
    "e3b489",
    "d6a886",
    "c89c83",
    "bc9081",
    "af857d",
    "a1787b",
    "946c78",
    "876076",
    "795472",
    "6b486f",
    "5d3c6c",
    "503069",
    "472867",
    "462766",
    "442765",
    "432664",
    "422664",
    "402563",
    "3f2461",
    "3d2360",
    "3b235f",
    "3a225e",
    "39225e",
    "37215c",
    "36215b",
    "34205a",
    "321f59",
    "311f58",
    "301e57",
    "2e1e56",
    "2c1d55",
    "2b1c54",
    "2a1b53",
    "281b52",
    "271b51",
    "251a50",
    "241950",
    "22194e",
    "21184d",
    "1f174c",
    "1e164b",
    "1c164a",
    "1b164a",
    "191548",
    "171447",
    "171447",
    "151345",
    "141345",
    "121244",
    "111143",
    "0f1041",
    "0d1040",
    "0c0f3f",
    "0a0f3e",
    "090e3d",
    "080e3d",
  ];
  const today = new Date();
  const hour = today.getHours();
  const minute = today.getMinutes();
  const tp = (hour * 60 + minute) / 1440;
  const index = Math.trunc(tp * data.length);
  return "#" + data[index];
};
